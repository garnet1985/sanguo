{"version":3,"sources":["conf/index.js","services/storage.js","services/event.js","services/index.js","gameEngine/entity/kingdom.js","gameEngine/entity/general.js","gameEngine/entity/city.js","gameEngine/entity/weapon.js","gameEngine/entity/weaponType.js","gameEngine/entity/armor.js","gameEngine/entity/entity.js","gameEngine/engine/main.js","gameEngine/i18n/en.js","gameEngine/i18n/cn.js","gameEngine/i18n/index.js","scenes/gameSceneWrapper/gameSceneWrapper.js","cps/commandBox/commandBox.js","cps/gameSelectBanner/gameSelectBanner.js","scenes/gameSelect/gameSelect.js","scenes/mainMap/mainMap.js","scenes/roleSelect/roleSelect.js","App.js","serviceWorker.js","index.js"],"names":["GAME_SELECT","ROLE_SELECT","MAIN_MAP","BATTLE_MAP","BATTLE","END","armor","army","city","general","kingdom","weapon","weaponType","newGameCache","Storage","this","ipcRenderer","window","require","prototype","save","fileName","data","do","load","saveGame","db","loadGame","loadSysDb","eventType","opts","Promise","resolve","reject","once","e","send","Events","pool","findEvent","eventName","i","length","name","uniqueCallback","event","callback","hasAdded","funcs","toString","push","removeEvent","splice","destory","call","off","unSubscribe","isOnce","listen","on","subscribe","trigger","forEach","cb","ui","util","Kingdom","entity","key","General","maxMilitary","Math","round","command","City","factor","pow","industry","infrastructure","morale","Weapon","WeaponType","Armor","instances","then","build","entities","Cls","map","kingdoms","createInstance","generals","cities","weapons","weaponTypes","armors","buildWeapons","buildGenerals","buildCities","buildKingdoms","type","all","storage","conf","promises","category","id","leader","entries","idx","capital","Game","gameDataCache","init","console","log","gameSelectScene","GAME_TITLE","GAME_VERSION","NEW_GAME","LOAD_SAVED","LANGUAGE_SWITCHER","CN","EN","DIFFICULT","EASY","NORMAL","HARD","BACK","SAVE_SLOT","currentLanguage","content","cn","set","lang","toLowerCase","en","Error","get","props","state","scene","layout","game","_toScene","setState","parseInt","_init","newLang","newScene","_getScene","className","Component","GameSelectBanner","args","commands","data-value","value","onClick","_clickCommand","bind","label","_getLayout","heading","text","GameSelect","commandBox","cmd","arg","_getCommandBox","MainMap","RoleSelect","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.401ee436.chunk.js","sourcesContent":["export default {\r\n\tversion: 0.01,\r\n\tscene: {\r\n\t\tGAME_SELECT: 1,\r\n\t\tROLE_SELECT: 2,\r\n\t\tMAIN_MAP: 3,\r\n\t\tBATTLE_MAP: 4,\r\n\t\tBATTLE: 5,\r\n\t\tEND: 6\r\n\t},\r\n\tfileName: {\r\n\t\tarmor: 'armor.json',\r\n\t\tarmy: 'army.json',\r\n\t\tcity: 'city.json',\r\n\t\tgeneral: 'general.json',\r\n\t\tkingdom: 'kingdom.json',\r\n\t\tweapon: 'weapon.json',\r\n\t\tweaponType: 'weaponType.json',\r\n\t\tnewGameCache: 'newGameCache.json'\r\n\t}\r\n}","function Storage(){\r\n\tthis.ipcRenderer = window.require('electron').ipcRenderer;\r\n}\r\n\r\nStorage.prototype.save = function(fileName, data){\r\n\treturn this.do('save', fileName, {\r\n\t\tdata\r\n\t});\r\n}\r\n\r\nStorage.prototype.load = function(fileName){\r\n\treturn this.do('load', fileName);\r\n}\r\n\r\nStorage.prototype.saveGame = function(fileName, data){\r\n\treturn this.do('save', fileName, {\r\n\t\tdb: 'saveGame',\r\n\t\tdata\r\n\t});\r\n}\r\n\r\nStorage.prototype.loadGame = function(fileName){\r\n\treturn this.do('load', fileName, {\r\n\t\tdb: 'saveGame'\r\n\t});\r\n}\r\n\r\nStorage.prototype.loadSysDb = function(fileName){\r\n\treturn this.do('load', fileName, {\r\n\t\tdb: 'sys'\r\n\t});\r\n}\r\n\r\nStorage.prototype.do = function(eventType, fileName = '', opts = {}){\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tthis.ipcRenderer.once(`${fileName}.${eventType}.complete`, (e, data) => {\r\n\t\t\tresolve(data);\r\n\t\t});\r\n\t\tthis.ipcRenderer.send(eventType, {\r\n\t\t\tfileName,\r\n\t\t\topts\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport default new Storage();","var Events = {\r\n    pool: [],\r\n    findEvent: function(eventName) {\r\n      for (var i = this.pool.length - 1; i >= 0; i--) {\r\n        if (this.pool[i].name === eventName) {\r\n          return this.pool[i];\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    uniqueCallback: function(event, callback) {\r\n\r\n      var hasAdded = false;\r\n\r\n      for (var i = 0; i < event.funcs.length; i++) {\r\n        if (callback.toString() === event.funcs[i].toString()) {\r\n          event.funcs[i] = callback;\r\n          hasAdded = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!hasAdded) {\r\n        event.funcs.push(callback);\r\n      }\r\n\r\n    },\r\n    removeEvent: function(eventName) {\r\n      for (var i = this.pool.length - 1; i >= 0; i--) {\r\n        if (this.pool[i].name === eventName) {\r\n          this.pool.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    destory: function(eventName) {\r\n      this.removeEvent.call(this, eventName);\r\n    },\r\n    off: function(eventName) {\r\n      this.removeEvent.call(this, eventName);\r\n    },\r\n    unSubscribe: function(eventName) {\r\n      this.removeEvent.call(this, eventName);\r\n    },\r\n    once: function(eventName, callback) {\r\n      var event = this.findEvent(eventName);\r\n      if (event) {\r\n        if (callback) {\r\n          event.funcs.push(callback);\r\n        }\r\n      } else {\r\n        event = {\r\n          name: eventName,\r\n          funcs: [callback],\r\n          isOnce: true\r\n        }\r\n        this.pool.push(event);\r\n      }\r\n    },\r\n    listen: function(eventName, callback) {\r\n\r\n      var event = this.findEvent(eventName);\r\n\r\n      if (event) {\r\n        this.uniqueCallback(event, callback);\r\n      } else {\r\n        event = {\r\n          name: eventName,\r\n          funcs: [callback],\r\n          isOnce: false\r\n        }\r\n        this.pool.push(event);\r\n      }\r\n\r\n    },\r\n    on: function(eventName, callback) {\r\n      this.listen.call(this, eventName, callback);\r\n    },\r\n    subscribe: function(eventName, callback) {\r\n      this.listen.call(this, eventName, callback);\r\n    },\r\n    trigger: function(eventName, data) {\r\n\r\n      var event = this.findEvent(eventName);\r\n\r\n      if (event) {\r\n        event.funcs.forEach(function(cb) {\r\n          cb(data);\r\n        });\r\n        if (event.isOnce) {\r\n          this.removeEvent(eventName)\r\n        }\r\n      }\r\n    }\r\n}\r\n\r\nexport default Events;","import storage from './storage';\r\nimport event from './event';\r\nimport ui from './ui';\r\nimport util from './util';\r\n\r\nexport {\r\n\tstorage,\r\n\tevent,\r\n\tui,\r\n\tutil\r\n}\r\n\r\nexport default {\r\n\tstorage,\r\n\tevent,\r\n\tui,\r\n\tutil\r\n}","class Kingdom {\r\n\tconstructor(entity){\r\n\t\tfor(const key in entity){\r\n\t\t\tthis[key] = entity[key];\r\n\t\t}\r\n\t}\r\n\tbuild(){\r\n\r\n\t}\r\n}\r\n\r\nexport default Kingdom;\r\n\r\n// function Kingdom(initData){\r\n// \tthis.id \t\t\t\t\t\t= initData.id;\r\n// \tthis.name\t\t\t\t\t\t= initData.name;\r\n// \tthis.isCustomized\t\t= initData.isCustomized;\r\n// \tthis.capital\t\t\t\t= initData.capital;\r\n// \tthis.reputation\t\t\t= initData.reputation;\r\n// }\r\n\r\n// Kingdom.prototype.build = function(cities = []){\r\n// \tcities.forEach((city) => {\r\n// \t\tif(city.id === this.capital){\r\n// \t\t\tthis.capital = city;\r\n// \t\t\treturn;\r\n// \t\t}\r\n// \t})\r\n// }","class General {\r\n\tconstructor(entity){\r\n\t\tfor(const key in entity){\r\n\t\t\tthis[key] = entity[key];\r\n\t\t}\r\n\t}\r\n\tbuild(){\r\n\r\n\t}\r\n\tgetMaxAllowedMilitary(general){\r\n\t\tthis.maxMilitary = Math.round(this.command / 10 + 1) * 1000;\r\n\t}\r\n\tgetOverallForce(){\r\n\t\t\r\n\t}\r\n\tgetLevel(){\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default General;\r\n\r\n// function General(initData){\r\n// \tthis.id \t\t\t\t\t= initData.id;\r\n// \tthis.name \t\t\t\t= initData.name;\r\n// \tthis.experience \t= initData.experience;\r\n// \tthis.level\t\t\t\t= this.getLevel(initData.experience);\r\n// \t// 德\r\n// \tthis.morality \t\t= initData.morality;\r\n// \t// 体\r\n// \tthis.hp \t\t\t\t\t= initData.hp;\r\n// \t// 政\r\n// \tthis.politics \t\t= initData.politics;\r\n// \t// 统\r\n// \tthis.command \t\t\t= initData.command;\r\n// \t// 智\r\n// \tthis.intelligence = initData.intelligence;\r\n// \t// 武\r\n// \tthis.force = {\r\n// \t\tpower: initData.power,\r\n// \t\tskill: initData.skill,\r\n// \t\toverall: this.getOverallForce(initData.power, initData.skill)\r\n// \t}\r\n// \t// 忠\r\n// \tthis.loyalty = {\r\n// \t\textent: initData.extent,\r\n// \t\tcaprice: initData.caprice\r\n// \t}\r\n// \tthis.bornYear \t\t= initData.bornYear;\r\n// \tthis.deadYear \t\t= initData.deadYear;\r\n// \tthis.title \t\t\t\t= initData.title;\r\n// \tthis.heroType\t\t\t= initData.heroType;\r\n// \tthis.weapon\t\t\t\t= initData.weapon;\r\n// \tthis.armor\t\t\t\t= initData.armor;\r\n// \tthis.isCustomized = initData.isCustomized;\r\n// \tthis.isLord \t\t\t= initData.isLord;\r\n// \tthis.ambition \t\t= initData.ambition;\r\n// \tthis.aggressive \t= initData.aggressive;\r\n// }\r\n\r\n// General.prototype.build = function(weapons, armors){\r\n// \tweapons.forEach((weapon) => {\r\n// \t\tif(weapon.id === this.weapon){\r\n// \t\t\tthis.weapon = weapon;\r\n// \t\t\treturn;\r\n// \t\t}\r\n// \t});\r\n// \tarmors.forEach((armor) => {\r\n// \t\tif(armor.id === this.armor){\r\n// \t\t\tthis.armor = armor;\r\n// \t\t\treturn;\r\n// \t\t}\r\n// \t});\r\n// \tthis.getMaxAllowedMilitary();\r\n// }\r\n\r\n// General.prototype.getMaxAllowedMilitary = function(){\r\n// \tthis.maxMilitary = Math.round(this.command / 10 + 1) * 1000;\r\n// }\r\n\r\n// General.prototype.getOverallForce = function(power, skill){\r\n// \treturn Math.round(power * .43 + skill * .57);\r\n// }\r\n\r\n// General.prototype.getLevel = function(exp){\r\n// \treturn parseInt(exp / 100) + 1;\r\n// }","class City {\r\n\tconstructor(entity){\r\n\t\tfor(const key in entity){\r\n\t\t\tthis[key] = entity[key];\r\n\t\t}\r\n\t}\r\n\tbuild(){\r\n\r\n\t}\r\n\tgetPopulation(){\r\n\t\tlet factor = Math.pow(\r\n\t\t\t+ this.entity.industry * .1 \r\n\t\t\t+ this.entity.infrastructure * .3\r\n\t\t\t+ this.entity.morale * 10 * .3, \r\n\t\t.57);\r\n\t\treturn Math.round(factor) * 10000;\r\n\t}\r\n\tcountMilitary(){\r\n\r\n\t}\r\n}\r\n\r\nexport default City;","class Weapon {\r\n\tconstructor(entity){\r\n\t\tfor(const key in entity){\r\n\t\t\tthis[key] = entity[key];\r\n\t\t}\r\n\t}\r\n\tbuild(){\r\n\r\n\t}\r\n}\r\nexport default Weapon;\r\n\r\n// function Weapon(initData){\r\n// \tthis.id = initData.id;\r\n// \tthis.name = initData.name;\r\n// \tthis.startPoint = initData.startPoint;\r\n// \tthis.power = initData.power;\r\n// \tthis.category = initData.category;\r\n// }\r\n\r\n// Weapon.prototype.build = function(weaponTypes){\r\n// \tweaponTypes.forEach((type) => {\r\n// \t\tif(type.id === this.category){\r\n// \t\t\tthis.category = type;\r\n// \t\t}\r\n// \t})\r\n// }","class WeaponType {\r\n\tconstructor(entity){\r\n\t\tfor(const key in entity){\r\n\t\t\tthis[key] = entity[key];\r\n\t\t}\r\n\t}\r\n\tbuild(){\r\n\r\n\t}\r\n}\r\nexport default WeaponType;","class Armor {\r\n\tconstructor(entity){\r\n\t\tfor(const key in entity){\r\n\t\t\tthis[key] = entity[key];\r\n\t\t}\r\n\t}\r\n\tbuild(){\r\n\r\n\t}\r\n}\r\n\r\nexport default Armor;","import { storage } from '../../services';\r\nimport conf from '../../conf';\r\n\r\nimport Kingdom from './kingdom';\r\nimport General from './general';\r\nimport City from './city';\r\nimport Weapon from './weapon';\r\nimport WeaponType from './weaponType';\r\nimport Armor from './armor';\r\n\r\nclass Entity {\r\n\tconstructor(){\r\n    this.instances = {};\r\n\t}\r\n  init(){\r\n    return this.load().then((data) => {\r\n      const gameData = this.build(data);\r\n      return gameData;\r\n    });\r\n  }\r\n  createInstance(entities, Cls){\r\n    return entities.map((entity) => {\r\n      return new Cls(entity);\r\n    });\r\n  }\r\n  build(data){\r\n    this.instances = {\r\n      kingdoms: this.createInstance(data.kingdoms, Kingdom),\r\n      generals: this.createInstance(data.generals, General),\r\n      cities: this.createInstance(data.cities, City),\r\n      weapons: this.createInstance(data.weapons, Weapon),\r\n      weaponTypes: this.createInstance(data.weaponTypes, WeaponType),\r\n      armors: this.createInstance(data.armors, Armor)\r\n    }\r\n    const weapons = this.buildWeapons(this.instances.weapons, this.instances.weaponTypes);\r\n    const generals = this.buildGenerals(this.instances.generals, this.instances.armors, weapons);\r\n    const cities = this.buildCities(this.instances.cities, generals);\r\n    const kingdoms = this.buildKingdoms(this.instances.kingdoms, cities);\r\n    return kingdoms;\r\n  }\r\n  load(type){\r\n    return Promise.all([\r\n      storage.load(conf.fileName.kingdom),\r\n      storage.load(conf.fileName.general),\r\n      storage.load(conf.fileName.city),\r\n      storage.load(conf.fileName.weapon),\r\n      storage.load(conf.fileName.weaponType),\r\n      storage.load(conf.fileName.armor)\r\n    ]).then((promises) => {\r\n      return {\r\n        kingdoms: promises[0],\r\n        generals: promises[1],\r\n        cities: promises[2],\r\n        weapons: promises[3],\r\n        weaponTypes: promises[4],\r\n        armors: promises[5]\r\n      }\r\n    });\r\n  }\r\n  buildWeapons (weapons, weaponTypes){\r\n    for(let weapon of weapons){\r\n      for(let weaponType of weaponTypes){\r\n        if(weapon.category === weaponType.id){\r\n          weapon.category = weaponType;\r\n        }\r\n      }\r\n    }\r\n    return weapons;\r\n  }\r\n  buildGenerals (generals, armors, weapons){\r\n    for(let general of generals){\r\n      for(let weapon of weapons){\r\n        if(general.weapon === weapon.id){\r\n          general.weapon = weapon;\r\n        }\r\n      }\r\n      for(let armor of armors){\r\n        if(general.armor === armor.id){\r\n          general.armor = armor;\r\n        }\r\n      }\r\n    }\r\n    return generals;\r\n  }\r\n  buildCities (cities, generals){\r\n    for(let general of generals){\r\n      for(let city of cities){\r\n        if(city.leader === general.id){\r\n          city.leader = general;\r\n        }\r\n        for(let [idx, generalId] of city.generals.entries()){\r\n          if(generalId === general.id){\r\n            city.generals[idx] = general;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return cities;\r\n  }\r\n  buildKingdoms (kingdoms, cities){\r\n    for(let city of cities){\r\n      for(let kingdom of kingdoms){\r\n        if(kingdom.capital === city.id){\r\n          kingdom.capital = city;\r\n        }\r\n        for(let [idx, cityId] of kingdom.cities.entries()){\r\n          if(cityId === city.id){\r\n            kingdom.cities[idx] = city;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return kingdoms;\r\n  }\r\n}\r\n\r\nexport default new Entity();","import { entity } from '../entity';\r\n// import service from './main.service';\r\n\r\nfunction Game(){\r\n\tthis.gameDataCache = {};\r\n}\r\n\r\nGame.prototype.init = function(){\r\n\tentity.init().then((data) => {\r\n\t\tthis.gameDataCache.data = data;\r\n\t\tconsole.log(this.gameDataCache)\r\n\t});\r\n}\r\n\r\nexport default new Game();","export default {\r\n\tgameSelectScene: {\r\n\t\tGAME_TITLE: 'Three Kingdoms',\r\n\t\tGAME_VERSION: 'version',\r\n\t\tNEW_GAME: 'New Game',\r\n\t\tLOAD_SAVED: 'Load Game',\r\n\t\tLANGUAGE_SWITCHER: 'Language',\r\n\t\tCN: 'Chinese',\r\n\t\tEN: 'English',\r\n\t\tDIFFICULT: 'Difficulty',\r\n\t\tEASY: 'Easy',\r\n\t\tNORMAL: 'Normal',\r\n\t\tHARD: 'Hard',\r\n\t\tBACK: 'Back',\r\n\t\tSAVE_SLOT: 'Save Slot'\r\n\t}\r\n}","export default {\r\n\tgameSelectScene: {\r\n\t\tGAME_TITLE: '三国志',\r\n\t\tGAME_VERSION: '版本',\r\n\t\tNEW_GAME: '新游戏',\r\n\t\tLOAD_SAVED: '读取进度',\r\n\t\tLANGUAGE_SWITCHER: '切换语言',\r\n\t\tCN: '中文',\r\n\t\tEN: '英语',\r\n\t\tDIFFICULT: '难度',\r\n\t\tEASY: '简单',\r\n\t\tNORMAL: '一般',\r\n\t\tHARD: '困难',\r\n\t\tBACK: '后退',\r\n\t\tSAVE_SLOT: '存档'\r\n\t}\r\n}","import en from './en';\r\nimport cn from './cn';\r\n\r\nexport default {\r\n\tcurrentLanguage: 'cn',\r\n\tcontent: cn,\r\n\tset: function(lang){\r\n\t\tswitch (lang.toLowerCase()) {\r\n\t\t\tcase 'en':\r\n\t\t\t\tthis.currentLanguage = 'en';\r\n\t\t\t\tthis.content = en;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'cn':\r\n\t\t\t\tthis.currentLanguage = 'cn';\r\n\t\t\t\tthis.content = cn;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('unrecognized language code in Language Class');\r\n\t\t}\r\n\t},\r\n\tget: function(){\r\n\t\treturn this.currentLanguage;\r\n\t}\r\n};","import React, { Component } from 'react';\r\n\r\nimport conf from '../../conf';\r\nimport { GameSelect, RoleSelect, MainMap } from '../';\r\nimport { event } from '../../services';\r\nimport { game, lang } from '../../gameEngine';\r\n\r\n\r\nclass Game extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      scene: 0,\r\n      lang: 'cn'\r\n    }\r\n  }\r\n\r\n  _getScene(scene){\r\n\r\n  \tlet layout = null;\r\n\r\n  \tswitch (this.state.scene) {\r\n  \t\tcase conf.scene.GAME_SELECT:\r\n  \t\t\tlayout = <GameSelect />\r\n  \t\t\tbreak;\r\n      case conf.scene.ROLE_SELECT:\r\n        layout = <RoleSelect />\r\n        break;\r\n  \t\tcase conf.scene.MAIN_MAP:\r\n  \t\t\tlayout = <MainMap />\r\n  \t\t\tbreak;\r\n  \t\tcase conf.scene.BATTLE_MAP:\r\n  \t\t\tlayout = <div id=\"battle-map-scene\">this is battle map</div>\r\n  \t\t\tbreak;\r\n  \t\tcase conf.scene.BATTLE:\r\n  \t\t\tlayout = <div id=\"battle-scene\">this is battle</div>\r\n  \t\t\tbreak;\r\n  \t\tcase conf.scene.END:\r\n  \t\t\tlayout = <div id=\"end-scene\">this is the end</div>\r\n  \t\t\tbreak;\r\n  \t\tdefault:\r\n  \t\t\tbreak;\r\n  \t}\r\n\r\n  \treturn layout;\r\n  }\r\n\r\n  _init(){\r\n    game.init();\r\n    lang.set('cn');\r\n    // this._toScene(conf.scene.GAME_SELECT);\r\n    this._toScene(conf.scene.ROLE_SELECT);\r\n  }\r\n\r\n  _toScene(id){\r\n    this.setState({\r\n      scene: parseInt(id)\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    this._init();\r\n\r\n    event.on('lang.change', (newLang) => {\r\n      this.setState({\r\n        lang: newLang\r\n      });\r\n    });\r\n\r\n    event.on('scene.change', (newScene) => {\r\n      this.setState({\r\n        scene: newScene\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.scene){\r\n      return <div id='loading'>Loading...</div>\r\n    }\r\n  \tlet scene = this._getScene(this.state.scene);\r\n    return (\r\n      <div id=\"game-wrapper\" className={ this.state.lang }>\r\n      \t{ scene }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","import React, { Component } from 'react';\r\n// import gameConf from '../../conf/gameConf';\r\nimport event from '../../services/event';\r\n// import lang from '../../i18n';\r\n\r\nimport './commandBox.scss';\r\n\r\n// \r\n// ***************  Command Box  ***************\r\n// \r\n// @args:\r\n// \t{\r\n// \t\teventName: { String }\r\n// \t\theading: { String } - optional\r\n// \t\tcommands: { Object }\r\n// \t\t\t[\r\n// \t\t\t\t{\r\n// \t\t\t\t\tlabel: { String },\r\n// \t\t\t\t\tvalue: { String },\r\n// \t\t\t\t}\r\n// \t\t\t]\r\n// \t}\r\n// \r\n// *********************************************\r\n\r\nclass GameSelectBanner extends Component {\r\n\r\n\t// constructor(props){\r\n\t// \tsuper(props);\r\n\t// }\r\n\r\n\t_getLayout(){\r\n\t\tlet layout = [];\r\n\t\tthis.props.args.commands.forEach((command, idx) => {\r\n\t\t\tlayout.push(<li key={ idx } className='command'>\r\n\t\t\t\t<button data-value={ command.value } className={`command-btn ${command.value}`}\r\n\t\t\t\t\tonClick={ this._clickCommand.bind(this, command) }>\r\n\t\t\t\t\t{ command.label }\r\n\t\t\t\t</button>\r\n\t\t\t</li>)\r\n\t\t});\r\n\t\treturn layout;\r\n\t}\r\n\r\n\t_clickCommand(command){\r\n\t\tevent.trigger(`${this.props.args.eventName}.click`, command);\r\n\t\tevent.trigger(`${this.props.args.eventName}.${command.value}.click`, command);\r\n\t}\r\n\r\n  render() {\r\n\t\t// let text = lang.content.gameSelectScene;\r\n\t\tlet layout = this._getLayout();\r\n\t\tlet heading = this.props.args.heading ? \r\n\t\t\t<h3 className='heading'>{this.props.args.heading}</h3> : ''\r\n    return (\r\n      <div className={`cp cp-command-box ${this.props.args.eventName}`}>\r\n      \t{ heading }\r\n      \t<ul>\r\n         \t{ layout }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameSelectBanner;","import React, { Component } from 'react';\r\nimport conf from '../../conf';\r\nimport { lang } from '../../gameEngine';\r\n\r\nimport './gameSelectBanner.scss';\r\n\r\nclass GameSelectBanner extends Component {\r\n  render() {\r\n\t\tlet text = lang.content.gameSelectScene;\r\n    return (\r\n      <div className='cp cp-game-select-banner'>\r\n         <h1 className='primary-text'>{ text.GAME_TITLE }</h1>\r\n         <span className='game-version'>{ text.GAME_VERSION } { conf.version }</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameSelectBanner;","import React, { Component } from 'react';\r\nimport conf from '../../conf';\r\n// import service from './service';\r\nimport './gameSelect.scss';\r\n\r\nimport { event } from '../../services';\r\nimport { lang } from '../../gameEngine';\r\nimport { GameSelectBanner, CommandBox } from '../../cps';\r\n\r\nclass GameSelect extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      commandBox: 'main'\r\n    }\r\n  }\r\n\r\n  _getCommandBox(){\r\n    let text = lang.content.gameSelectScene;\r\n    switch (this.state.commandBox) {\r\n      case 'main':\r\n        return {\r\n          eventName: 'gameSelect',\r\n          commands: [\r\n            {\r\n              label: text.NEW_GAME,\r\n              value: 'newGame'\r\n            },\r\n            {\r\n              label: text.LOAD_SAVED,\r\n              value: 'loadGame'\r\n            },\r\n            {\r\n              label: text.LANGUAGE_SWITCHER,\r\n              value: 'languageSwitcher'\r\n            },\r\n          ]\r\n        }\r\n      case 'newGame':\r\n        return {\r\n          eventName: 'newGame',\r\n          commands: [\r\n            {\r\n              label: text.EASY,\r\n              value: 'level1'\r\n            },\r\n            {\r\n              label: text.NORMAL,\r\n              value: 'level2'\r\n            },\r\n            {\r\n              label: text.HARD,\r\n              value: 'level3'\r\n            },\r\n            {\r\n              label: text.BACK,\r\n              value: 'back'\r\n            }\r\n          ]\r\n        }\r\n      case 'loadGame':\r\n        return {\r\n          eventName: 'loadGame',\r\n          commands: [\r\n            {\r\n              label: `${text.SAVE_SLOT} 1`,\r\n              value: 'save1'\r\n            },\r\n            {\r\n              label: `${text.SAVE_SLOT} 2`,\r\n              value: 'save2'\r\n            },\r\n            {\r\n              label: `${text.SAVE_SLOT} 3`,\r\n              value: 'save3'\r\n            },\r\n            {\r\n              label: `${text.SAVE_SLOT} 4`,\r\n              value: 'save4'\r\n            },\r\n            {\r\n              label: `${text.SAVE_SLOT} 5`,\r\n              value: 'save5'\r\n            },\r\n            {\r\n              label: `${text.SAVE_SLOT} 6`,\r\n              value: 'save6'\r\n            },\r\n            {\r\n              label: `${text.SAVE_SLOT} 7`,\r\n              value: 'save7'\r\n            },\r\n            {\r\n              label: `${text.SAVE_SLOT} 8`,\r\n              value: 'save8'\r\n            }\r\n          ]\r\n        }\r\n       case 'languageSwitcher':\r\n        return {\r\n          eventName: 'languageSwitcher',\r\n          commands: [\r\n            {\r\n              label: `${text.CN}`,\r\n              value: 'cn'\r\n            },\r\n            {\r\n              label: `${text.EN}`,\r\n              value: 'en'\r\n            }\r\n          ]\r\n        }\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n    event.on('gameSelect.newGame.click', (cmd) => {\r\n      this.setState({\r\n        commandBox: 'newGame'\r\n      });\r\n    });\r\n\r\n    event.on('gameSelect.loadGame.click', (cmd) => {\r\n      this.setState({\r\n        commandBox: 'loadGame'\r\n      });\r\n    });\r\n\r\n    event.on('gameSelect.languageSwitcher.click', (cmd) => {\r\n      this.setState({\r\n        commandBox: 'languageSwitcher'\r\n      });\r\n    });\r\n\r\n    event.on('newGame.click', (cmd) => {\r\n\r\n      event.trigger('scene.change', conf.scene.ROLE_SELECT)\r\n\r\n      this.setState({\r\n        commandBox: 'main'\r\n      });\r\n    });\r\n\r\n    event.on('loadGame.click', (cmd) => {\r\n      this.setState({\r\n        commandBox: 'main'\r\n      });\r\n    });\r\n\r\n    event.on('languageSwitcher.click', (cmd) => {\r\n      if(cmd.value !== lang.get()){\r\n        lang.set(cmd.value);\r\n        event.trigger('lang.change', cmd.value)\r\n      }\r\n      this.setState({\r\n        commandBox: 'main'\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let arg = this._getCommandBox();\r\n    return (\r\n      <div className='game-select scene'>\r\n        <GameSelectBanner />\r\n        <div className='game-select-box'>\r\n          <div className='command-box'>\r\n            <CommandBox args = { arg } />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameSelect;","import React, { Component } from 'react';\r\n// import gameConf from '../conf/gameConf';\r\n// import service from './service';\r\n\r\nclass MainMap extends Component {\r\n\r\n  // constructor(props){\r\n    // super(props);\r\n    // this.state = {\r\n    //   scene: 1\r\n    // }\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-map scene\">\r\n      \tMain Main\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainMap;","import React, { Component } from 'react';\r\n// import gameConf from '../conf/gameConf';\r\n// import service from './service';\r\n\r\nimport './roleSelect.scss';\r\n\r\nclass RoleSelect extends Component {\r\n\r\n  // constructor(props){\r\n  //   super(props);\r\n  // }\r\n\r\n  _init(){\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"role-select scene\">\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoleSelect;","import React from 'react';\r\nimport './App.scss';\r\nimport { Game } from './scenes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"game\">\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}